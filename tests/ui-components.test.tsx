import assert from 'node:assert/strict';
import test from 'node:test';
import React from 'react';
import { renderToString } from 'react-dom/server';
import { SkeletonLoader } from '@/components/shared/ui/SkeletonLoader';
import { LoadingButton } from '@/components/shared/ui/LoadingButton';

/**
 * üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ SkeletonLoader –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∑–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Å—Ç—Ä–æ–∫.
 */
test('SkeletonLoader —Ä–µ–Ω–¥–µ—Ä–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫', () => {
  const html = renderToString(
    <SkeletonLoader rows={2} columns={2} animated={false} />,
  );
  const rowMatches = html.match(/data-row-index/g) ?? [];
  assert.equal(rowMatches.length, 2);
});

/**
 * üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º aria-–∞—Ç—Ä–∏–±—É—Ç—ã LoadingButton –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏.
 */
test('LoadingButton –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç aria-busy –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ', () => {
  const html = renderToString(
    <LoadingButton isLoading className="test">
      –¢–µ—Å—Ç
    </LoadingButton>,
  );
  assert.ok(html.includes('aria-busy="true"'));
});
