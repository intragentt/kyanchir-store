// –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: /src/app/api/telegram-support-webhook/route.ts

import { NextResponse } from 'next/server';
import { getBotInstance, setWebhook } from '@/lib/telegramService';
import prisma from '@/lib/prisma';
import TelegramBot from 'node-telegram-bot-api';

// --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô ---

// –í—ã–∑—ã–≤–∞–µ–º –±–æ—Ç–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ –û–î–ò–ù –†–ê–ó –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞.
const bot = getBotInstance();
setWebhook();

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start: –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞
async function handleStartCommand(msg: TelegramBot.Message) {
  if (!msg.from) return;

  const { id: telegramId, username, first_name: firstName } = msg.from;
  const chatId = msg.chat.id;

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∞–≥–µ–Ω—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –ø–æ ID
  const existingAgent = await prisma.supportAgent.findFirst({
    where: { telegramId: String(telegramId) },
  });

  if (existingAgent) {
    await bot.sendMessage(
      chatId,
      `‚úÖ –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${firstName}! –í—ã —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ.`,
    );
    return;
  }

  // 2. –ï—Å–ª–∏ –∞–≥–µ–Ω—Ç–∞ –Ω–µ—Ç, –∏—â–µ–º –µ–≥–æ –≤ "–±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ" –ø–æ username, –Ω–æ –±–µ–∑ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ ID
  const potentialAgent = await prisma.supportAgent.findFirst({
    where: {
      internalUsername: username,
      telegramId: null, // –ò—â–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, –∫—Ç–æ –µ—â–µ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç
    },
  });

  if (!potentialAgent) {
    await bot.sendMessage(
      chatId,
      `‚ùå –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${firstName}. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—Å –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.`,
    );
    return;
  }

  // 3. –ê–≥–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω! –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –µ–≥–æ telegramId –∫ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ.
  const updatedAgent = await prisma.supportAgent.update({
    where: { id: potentialAgent.id },
    data: { telegramId: String(telegramId) },
  });

  await bot.sendMessage(
    chatId,
    `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${updatedAgent.name}! –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Ç–∏–∫–µ—Ç–∞—Ö.`,
  );
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–¥–∏—Å–ø–µ—Ç—á–µ—Ä, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å–µ –≤–µ–±—Ö—É–∫–∏ –æ—Ç Telegram
export async function POST(req: Request) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  const secretToken = req.headers.get('x-telegram-bot-api-secret-token');
  if (secretToken !== process.env.TELEGRAM_SUPPORT_WEBHOOK_SECRET) {
    console.warn('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞.');
    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
  }

  try {
    const body = await req.json();
    const msg = body.message as TelegramBot.Message | undefined;

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    if (!msg || !msg.text) {
      return NextResponse.json({ message: 'Update is not a message' });
    }

    // --- –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ ---
    if (msg.text.startsWith('/start')) {
      await handleStartCommand(msg);
    } else if (msg.reply_to_message) {
      // TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç–∏–∫–µ—Ç
      await bot.sendMessage(
        msg.chat.id,
        `(–ó–∞–≥–ª—É—à–∫–∞) –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É.`,
      );
    } else {
      // –û—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ —è–≤–ª—è—é—â–µ–µ—Å—è –∫–æ–º–∞–Ω–¥–æ–π –∏–ª–∏ –æ—Ç–≤–µ—Ç–æ–º
      await bot.sendMessage(
        msg.chat.id,
        '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start',
      );
    }

    // –°–æ–æ–±—â–∞–µ–º Telegram, —á—Ç–æ –º—ã –≤—Å–µ –ø–æ–ª—É—á–∏–ª–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏
    return NextResponse.json({ status: 'ok' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –≤–µ–±—Ö—É–∫–∞ –∞–¥–º–∏–Ω-–±–æ—Ç–∞:', error);
    return NextResponse.json(
      { error: 'Internal Server Error' },
      { status: 500 },
    );
  }
}
// --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---
